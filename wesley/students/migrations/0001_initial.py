# Generated by Django 3.0.3 on 2020-03-04 10:24

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'ordering': ['class_name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('korean_name', models.CharField(max_length=10)),
                ('eng_name', models.CharField(max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('parents_phone', models.CharField(max_length=20)),
                ('event', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Group')),
            ],
            options={
                'ordering': ['group'],
                'unique_together': {('korean_name', 'eng_name')},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('room_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Temporary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(choices=[(datetime.time(16, 0), '16:00'), (datetime.time(16, 20), '16:20'), (datetime.time(16, 40), '16:40'), (datetime.time(17, 0), '17:00'), (datetime.time(17, 20), '17:20'), (datetime.time(17, 40), '17:40'), (datetime.time(18, 0), '18:00'), (datetime.time(18, 20), '18:20'), (datetime.time(18, 45), '18:45'), (datetime.time(19, 5), '19:05'), (datetime.time(19, 25), '19:25'), (datetime.time(20, 10), '20:10'), (datetime.time(20, 30), '20:30'), (datetime.time(20, 50), '20:50'), (datetime.time(21, 15), '21:15'), (datetime.time(21, 35), '21:35'), (datetime.time(21, 55), '21:55'), (datetime.time(22, 20), '22:20'), (datetime.time(22, 40), '22:40'), (datetime.time(23, 0), '23:00'), (datetime.time(23, 20), '23:20')])),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=1200))),
                ('temp_date', models.DateField(default=datetime.date.today)),
                ('kind', models.CharField(choices=[('event1', 'Event1'), ('event2', 'Event2'), ('makeup', 'MakeUp')], max_length=20)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Regular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(choices=[(datetime.time(16, 0), '16:00'), (datetime.time(16, 20), '16:20'), (datetime.time(16, 40), '16:40'), (datetime.time(17, 0), '17:00'), (datetime.time(17, 20), '17:20'), (datetime.time(17, 40), '17:40'), (datetime.time(18, 0), '18:00'), (datetime.time(18, 20), '18:20'), (datetime.time(18, 45), '18:45'), (datetime.time(19, 5), '19:05'), (datetime.time(19, 25), '19:25'), (datetime.time(20, 10), '20:10'), (datetime.time(20, 30), '20:30'), (datetime.time(20, 50), '20:50'), (datetime.time(21, 15), '21:15'), (datetime.time(21, 35), '21:35'), (datetime.time(21, 55), '21:55'), (datetime.time(22, 20), '22:20'), (datetime.time(22, 40), '22:40'), (datetime.time(23, 0), '23:00'), (datetime.time(23, 20), '23:20')])),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=1200))),
                ('start_on', models.DateField(default=datetime.date.today)),
                ('days_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday')], max_length=10)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Teacher')),
            ],
            options={
                'ordering': ['days_of_week', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('finished', models.BooleanField(default=False)),
                ('problem', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Absent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('why', models.CharField(max_length=100)),
                ('have_to_check', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
            ],
            options={
                'ordering': ('date', 'student'),
            },
        ),
    ]
